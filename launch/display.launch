<launch>

  <arg name="gui" default="true" />
  <arg name="rvizconfig" default="$(find scara_robot)/rviz/urdf.rviz" />
  <arg name="robot_position" default="-x 0.0 -y 0.0 -z 0.0" />
  
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find scara_robot)/xacro/model.xacro'" />  
  <param name="use_gui" value="$(arg gui)"/>
  

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gazebo_gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>



  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model scararobot -param robot_description"/>

  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="state_publisher" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="false" />


  <!-- ros_control rrbot launch file -->
  <!--include file="$(find scara_robot)/launch/control.launch" /-->

</launch>
